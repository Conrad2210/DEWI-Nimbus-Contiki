<!DOCTYPE html>
<html lang="en">

<head>

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>RLL Protocol Demonstrator</title>

    <!-- Bootstrap Core CSS -->
    <link href="../bower_components/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet">

    <!-- MetisMenu CSS -->
    <link href="../bower_components/metisMenu/dist/metisMenu.min.css" rel="stylesheet">

    <!-- Timeline CSS -->
    <link href="../dist/css/timeline.css" rel="stylesheet">

    <!-- Custom CSS -->
    <link href="../dist/css/sb-admin-2.css" rel="stylesheet">

	<link href="libs_add_by_alex/jquery-ui/jquery-ui-slider-pips.css" rel="stylesheet">
	<link rel="stylesheet" href="libs_add_by_alex/jquery-ui/jquery-ui.css">

    <!-- Custom Fonts -->
    <link href="../bower_components/font-awesome/css/font-awesome.min.css" rel="stylesheet" type="text/css">

    <!-- Own CSS -->
    <link href="../bower_components/bootstrap/dist/css/index.css" rel="stylesheet">

    <!-- jQuery -->
    <script src="../bower_components/jquery/dist/jquery.min.js"></script>
	<script src="libs_add_by_alex/jquery-ui/jquery-ui.js"></script>
	
    <!-- Bootstrap Core JavaScript -->
    <script src="../bower_components/bootstrap/dist/js/bootstrap.min.js"></script>

    <!-- Metis Menu Plugin JavaScript -->
    <script src="../bower_components/metisMenu/dist/metisMenu.min.js"></script>

    <!-- Custom Theme JavaScript -->
    <script src="../dist/js/sb-admin-2.js"></script>

    <!-- Own JavaScript libraries -->
	<script src="../bower_components/jquery/dist/jquery.ui.touch-punch.min.js"></script>
	<script src="../bower_components/jquery/dist/jquery.mobile.custom.js"></script>
	<script src="../bower_components/jquery/dist/jquery.mobile.custom.min.js"></script>
	<script src="../bower_components/jquery/dist/p5.min.js"></script>
  	<script src="../bower_components/jquery/dist/p5.dom.js"></script>
	
	<script src="libs_add_by_alex/jquery-ui/jquery-ui-slider-pips.js"></script>
	<script src="libs_add_by_alex/namethecolor/ntc.js"></script>

    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
        <script src="https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
        <script src="https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js"></script>
    <![endif]-->

    <style>
      #received { width: 100%; height: 400px; border: 1px solid #dedede; overflow-y:scroll;}
      #sent { width: 500px; } 
    </style>



</head>

<body>
	
    <div id="wrapper">

        <!-- Navigation -->
        <nav class="navbar navbar-default navbar-static-top" role="navigation" style="margin-bottom: 0">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand" href="index.phtml">RLL Protocol</a>
            </div>
            <!-- /.navbar-header -->
            <div class="navbar-default sidebar" role="navigation">
                <div class="sidebar-nav navbar-collapse">
                    <ul class="nav" id="side-menu">
                        <li class="sidebar-search">
                            <div class="DEWILOGO">
                               <p align="center"><img src="DEWI-Logo.jpg" align="center" width="200" height="86.9" > </p>
                            </div>
                            <!-- /input-group -->
                        </li>
                        <li>
                            <a href="index.phtml">Home</a>
                        </li>
                        <li>
                            <a href="dataTable.phtml">Table of Nodes</a>
                        </li>
                        <li>
                            <a href="topology.phtml">Light Network Topology</a>
                        </li>
                        <li>
                            <a href="color.phtml">RGB LED Color</a>
                        </li>
			<li>
			    <a href="statistics.phtml">Statistics</a>
			</li>
			<li>
			    <a href="console.html">Console</a>
			</li>
                    </ul>
                </div>
                <!-- /.sidebar-collapse -->
            </div>
            <!-- /.navbar-static-side -->
        </nav>

        <div id="page-wrapper">
            <div class="row">
                <div class="col-lg-12">
                    <h1 class="page-header">RGB LED color change</h1>
				<?php 
					include ("FitDataTab1.php"); //Sort out in the order of insertion, and add id number
					sleep(0.5);
					include ("FitDataTab2.php"); //update target master node name and nodes group in Dewi_tab
					sleep(0.5);
					include ("FitDataTab3.php"); //update slave name in dewi_tab
					sleep(0.5);
					include ("FitDataTab4.php"); //update  datatable of nodes's links 
					sleep(0.5);
					include ("DBtoJson.php");	//convert the mysql datatable data into a json file
				?>
	
                </div>
                <!-- /.col-lg-12 -->
            </div>
					
	  
            <!-- /.row -->
            <div class="row">
                <!-- <center><canvas width="455" height="455" id="canvas_picker"></canvas></center> -->
                <center><canvas width="600" height="388" id="canvas_picker"></canvas></center>
                <center><div id="rgb">RGB: <input id="rgb_input" type="text" size="10"></input> 
											<input id="colorname" type="text" size="15"></input>
											<input id="colorzone" type="text" STYLE="background:white;" size="10"></input>
				
				<div style ="position:relative;top:-20em;left:25em;width:1em;height:15em;" class="slider" ></div>
				</div></center>
                <!-- <center><div id="msg">Connection Established</div></center> -->
				
					<script type="text/javascript"> //create the slider for brightness
        			$(".slider")
						.slider({
							max: 10,
							min: 0,
							value: 0,
							range: "min",
							orientation: "vertical"
						});

						$(".slider")
						.slider("pips", {
							first: "pip",
							last: "pip",
							rest: "label"
						})
						.slider("float");  
						
                    
                    var standalone = window.navigator.standalone,  				//
                    IOS_userAgent = window.navigator.userAgent.toLowerCase(),	// to make this webpage works on IOS navigator
                    safari = /safari/.test( IOS_userAgent ),					//
                    ios = /iphone|ipod|ipad/.test( IOS_userAgent );				//
                   
                    
					var canvas = document.getElementById('canvas_picker');
					var ctx = canvas.getContext('2d');
                    
					var img = new Image();
                    // img.src = '../img/circle.png';
					//img.src = '../img/colors.jpg';
					img.src = '../img/colors1.jpg';

				 	$(img).load(function(){
					  ctx.drawImage(img,0,0);
					});

				 	var lasttimestamp = 0;

					//function rgbToHex(R,G,B) {return toHex(R)+toHex(G)+toHex(B)}			//use image color.png  the dark colours chosen on the webpage are not the same showed by the nodes
					function rgbToHex(R,G,B) {return toHex(R/3)+toHex(G/3)+toHex(B/3)}  //use image color1.png   because with a same coordinate, the colour chosen on the webpage is more dark than the nodes display
																			//so we need to reduce the coordinate value, in order that the light colour of the nodes is more similar to the webpage colour
					
					function rgbToHexfordisplay(R,G,B) {return toHex(R&0b11111000)+toHex(G&0b11111000)+toHex(B&0b11111000)}		

					
					function toHex(n) {
					  n = parseInt(n,10);
					  if (isNaN(n)) return "00";
					  n = Math.max(0,Math.min(n,255));return "0123456789ABCDEF".charAt((n-n%16)/16) + "0123456789ABCDEF".charAt(n%16);
					}

					//var socket = new WebSocket("ws://157.190.52.19:8081");
					


var socket = new WebSocket("ws://192.168.1.1:8081/ws");
var received = $('#received');
console.log(received);
socket.onopen = function(){  
  console.log("connected"); 
}; 
socket.onmessage = function (message) {
  console.log("receiving: " + message.data);
  $('#received').append(message.data);
  $('#received').append($('<br/>'));
$('#received').scrollTop($('#received')[0].scrollHeight);
};

socket.onclose = function(){
  console.log("disconnected"); 
};

var sendMessage = function(message) {
  console.log("sending:" + message.data);
  socket.send(message.data);
};


// GUI Stuff


// send a command to the serial port


$('#clear').click(function(){
  $('#received').empty();
});
					
					$(".row").on('mouseup',function(event){  							//brightness slider event
						var selection = $( ".slider" ).slider( "option", "value" );
						console.log(selection);
						socket.send("BRIGHTNESS "+selection+ "\n");
					});
					$(".row").on('touchend',function(event){
						var selection = $( ".slider" ).slider( "option", "value" );
						console.log(selection);
						socket.send("BRIGHTNESS "+selection+ "\n");
					});
					
					//colour choice event for chrome navigator
					 if((navigator.userAgent.indexOf("Chrome") || navigator.userAgent.indexOf("CriOS")) != -1 ){
					 	$('#canvas_picker').on('touchstart touchmove', function(event){
							event.preventDefault();
							//console.log(event.changedTouches[0]);
							var x = event.originalEvent.targetTouches[0].pageX - this.offsetLeft;
							var y = event.originalEvent.targetTouches[0].pageY - this.offsetTop;
							var R, G, B, rgb, img_data;
							var hex;
							//console.log(this.offsetTop);
							img_data = ctx.getImageData(x, y, canvas.width, canvas.height).data;
							if(event.timeStamp - lasttimestamp > 100){
								lasttimestamp = event.timeStamp;
								R = img_data[0];
								G = img_data[1];
								B = img_data[2]; 
								rgb = R + ',' + G + ',' + B;
								hex = rgbToHex(R,G,B);
                                console.log("hex " + hex);
								$('#rgb_input').val(rgb);
								$('#colorname').val(ntc.name("#"+ rgbToHexfordisplay(R,G,B))[1] +' color');
								document.getElementById('colorzone').style.background =ntc.name("#"+ rgbToHexfordisplay(R,G,B))[0] ; 
								socket.send(hex + "\n");
                                // var buffer = new ArrayBuffer(3);
                                // var bytes = new Uint8Array(buffer);
                                // bytes[0] = R;
                                // bytes[1] = G;
                                // bytes[2] = B;
                                // socket.send(buffer);
							}
							event.preventDefault();
						});
						$('#canvas_picker').on('mousemove', function(event){
							event.preventDefault();
							//console.log(event.changedTouches[0]);
							var x = event.pageX - this.offsetLeft;
							var y = event.pageY - this.offsetTop;
							var R, G, B, rgb, img_data;
							var hex;
							//console.log(this.offsetTop);
							img_data = ctx.getImageData(x, y, canvas.width, canvas.height).data;
							if(event.timeStamp - lasttimestamp > 100){
								lasttimestamp = event.timeStamp;
								R = img_data[0];
								G = img_data[1];
								B = img_data[2]; 
								rgb = R + ', ' + G + ', ' + B;
								hex = rgbToHex(R,G,B);
								$('#rgb_input').val(rgb);
								$('#colorname').val(ntc.name("#"+ rgbToHexfordisplay(R,G,B))[1] +' color');
								document.getElementById('colorzone').style.background =ntc.name("#"+rgbToHexfordisplay(R,G,B))[0] ; 
                                socket.send(hex + "\n");
							}
							event.preventDefault();
						});
					 }
					 else if(navigator.userAgent.indexOf("Firefox") != -1 ){ //colour choice event for firefox navigator
					 	$('#canvas_picker').on('mousemove', function(event){
							event.preventDefault();
							//console.log(event.changedTouches[0]);
							var x = event.pageX - this.offsetLeft;
							var y = event.pageY - this.offsetTop;
							var R, G, B, rgb, img_data;
							var hex;
							//console.log(this.offsetTop);
							img_data = ctx.getImageData(x, y, canvas.width, canvas.height).data;
							if(event.timeStamp - lasttimestamp > 100){
								lasttimestamp = event.timeStamp;
								R = img_data[0];
								G = img_data[1];
								B = img_data[2]; 
								rgb = R + ', ' + G + ', ' + B;
								hex = rgbToHex(R,G,B);
								$('#rgb_input').val(rgb);
								$('#colorname').val(ntc.name("#"+ rgbToHexfordisplay(R,G,B))[1] +' color');
								document.getElementById('colorzone').style.background =ntc.name("#"+ rgbToHexfordisplay(R,G,B))[0] ; 
                                socket.send(hex + "\n");
							}
							event.preventDefault();
						});
						$('#canvas_picker').on('touchstart touchmove', function(event){
							event.preventDefault();
							//console.log(event.changedTouches[0]);
							var x = event.originalEvent.targetTouches[0].pageX - this.offsetLeft;
							var y = event.originalEvent.targetTouches[0].pageY - this.offsetTop;
							var R, G, B, rgb, img_data;
							var hex;
							//console.log(this.offsetTop);
							img_data = ctx.getImageData(x, y, canvas.width, canvas.height).data;
							if(event.timeStamp - lasttimestamp > 100){
								lasttimestamp = event.timeStamp;
								R = img_data[0];
								G = img_data[1];
								B = img_data[2]; 
								rgb = R + ',' + G + ',' + B;
								hex = rgbToHex(R,G,B);
                                console.log("hex " + hex);
								$('#rgb_input').val(rgb);
								$('#colorname').val(ntc.name("#"+ rgbToHexfordisplay(R,G,B))[1] +' color');
								document.getElementById('colorzone').style.background =ntc.name("#"+ rgbToHexfordisplay(R,G,B))[0] ; 								
								socket.send(hex + "\n");
							}
							event.preventDefault();
						});
					 }else if( ios ) {  //colour choice event for IOS navigator
                            if ( !standalone && safari ) {
                                //browser
                                $('#canvas_picker').on('mousemove', function(event){
							event.preventDefault();
							//console.log(event.changedTouches[0]);
							var x = event.pageX - this.offsetLeft;
							var y = event.pageY - this.offsetTop;
							var R, G, B, rgb, img_data;
							var hex;
							//console.log(this.offsetTop);
							img_data = ctx.getImageData(x, y, canvas.width, canvas.height).data;
							if(event.timeStamp - lasttimestamp > 100){
								lasttimestamp = event.timeStamp;
								R = img_data[0];
								G = img_data[1];
								B = img_data[2]; 
								rgb = R + ', ' + G + ', ' + B;
								hex = rgbToHex(R,G,B);
								$('#rgb_input').val(rgb);
								$('#colorname').val(ntc.name("#"+ rgbToHexfordisplay(R,G,B))[1] +' color');
								document.getElementById('colorzone').style.background =ntc.name("#"+ rgbToHexfordisplay(R,G,B))[0] ; 								
                                socket.send(hex + "\n");
							}
							event.preventDefault();
						});
						$('#canvas_picker').on('touchstart touchmove', function(event){
							event.preventDefault();
							//console.log(event.changedTouches[0]);
							var x = event.originalEvent.targetTouches[0].pageX - this.offsetLeft;
							var y = event.originalEvent.targetTouches[0].pageY - this.offsetTop;
							var R, G, B, rgb, img_data;
							var hex;
							//console.log(this.offsetTop);
							img_data = ctx.getImageData(x, y, canvas.width, canvas.height).data;
							if(event.timeStamp - lasttimestamp > 100){
								lasttimestamp = event.timeStamp;
								R = img_data[0];
								G = img_data[1];
								B = img_data[2]; 
								rgb = R + ',' + G + ',' + B;
								hex = rgbToHex(R,G,B);
                                console.log("hex " + hex);
								$('#rgb_input').val(rgb);
								$('#colorname').val(ntc.name("#"+ rgbToHexfordisplay(R,G,B))[1] +' color');
								document.getElementById('colorzone').style.background =ntc.name("#"+ rgbToHexfordisplay(R,G,B))[0] ; 								
								socket.send(hex + "\n");
							}
							event.preventDefault();
						});
                            };
                           
                     }else{
					 	console.log("ERROR: Browse in FF or Chrome or IOS_Safari jejej");
					 }

				 	/*WEBSOCKET SERVER*/

				 	function setup() {
						socket.onopen = openSocket;
					}
					// Change text to push up message or similar
					function openSocket() {
						socket.send("Hello server");
				 		console.log("Connected to wsServer");
                        // alert("Connection Established");
                    }

				</script>
               <!-- /.row -->

	<p>Data received from serial port</p>
  <div id="received">
  </div>
  <button id="clear">Clear</button>
</div> 
        </div>
        <!-- /#page-wrapper -->
    </div>
    <!-- /#wrapper -->
</body>

</html>
